/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controle.CategoriasController;
import controle.ClienteController;
import controle.FormaDePagamentoController;
import controle.FornecedorController;
import controle.ProdutoController;
import fachada.Cliente;
import fachada.FormaPagamento;
import fachada.Fornecedor;
import fachada.Produto;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author Rafael
 */
public class JPanelMenuGerenciarDados extends javax.swing.JPanel {

    JFramePrincipal principal;
    private Component rootPane;
    FornecedorController fornecedor = new FornecedorController();
    ClienteController cliente = new ClienteController();
    ProdutoController produto = new ProdutoController();
    DecimalFormat formatador = new DecimalFormat("###0.00");
    FormaDePagamentoController formaPagamento = new FormaDePagamentoController();

    /**
     * Creates new form JPanelMenuGerenciarDados
     */
    public JPanelMenuGerenciarDados(JFramePrincipal principal, int aba) {
        initComponents();
        this.principal = principal;
        jTabbedPane1.setSelectedIndex(aba);
        preencherClientes();
        preencherFornecedores();
        preencherProdutos();
        preencherFormaPagamento();
        buscaDinamica();
        preencherTipos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton7 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();

        jTabbedPane1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N

        jTable1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Telefone", "Local de trabalho"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user_add.png"))); // NOI18N
        jButton1.setText("Cadastrar Cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user.png"))); // NOI18N
        jButton2.setText("Detalhar Dados");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user_edit.png"))); // NOI18N
        jButton3.setText("Editar Dados");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user_delete.png"))); // NOI18N
        jButton4.setText("Remover Cliente");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/magnifier.png"))); // NOI18N
        jLabel3.setText("Buscar:");

        jTextField1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Clientes", jPanel2);

        jButton11.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user_delete.png"))); // NOI18N
        jButton11.setText("Remover Fornecedor");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user_add.png"))); // NOI18N
        jButton12.setText("Cadastrar Fornecedor");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jSeparator4.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTable3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Telefone", "Local de trabalho"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jButton13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user_edit.png"))); // NOI18N
        jButton13.setText("Editar Dados");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/user.png"))); // NOI18N
        jButton14.setText("Detalhar Dados");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/magnifier.png"))); // NOI18N
        jLabel5.setText("Buscar:");

        jTextField3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fornecedores", jPanel6);

        jButton5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/plugin_delete.png"))); // NOI18N
        jButton5.setText("Remover Produto");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/plugin_add.png"))); // NOI18N
        jButton6.setText("Cadastrar Produto");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton7.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/plugin_edit.png"))); // NOI18N
        jButton7.setText("Editar Dados");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produto", "Preço", "Código"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel5.setLayout(new java.awt.BorderLayout());

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/magnifier.png"))); // NOI18N
        jLabel4.setText("Buscar:");

        jTextField2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("Ver:");

        jComboBox1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Produtos de Venda", jPanel3);

        jButton8.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/money_add.png"))); // NOI18N
        jButton8.setText("Cadastrar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/money.png"))); // NOI18N
        jButton9.setText("Editar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/money_delete.png"))); // NOI18N
        jButton10.setText("Excluir");

        jPanel4.setLayout(new java.awt.BorderLayout());

        jTable4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título 1"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Formas de Pagamento", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        principal.gerenciarClientes(0, 0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o cliente");
        } else {
            int linha = jTable1.getSelectedRow();
            String id = String.valueOf(jTable1.getModel().getValueAt(linha, 0));
            this.principal.gerenciarClientes(1, Integer.parseInt(id));
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o cliente");
        } else {
            int linha = jTable1.getSelectedRow();
            String id = jTable1.getModel().getValueAt(linha, 0).toString();
            this.principal.editarCliente(Integer.parseInt(id));
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o cliente");
        } else {
            int linha = jTable1.getSelectedRow();
            String id = jTable1.getModel().getValueAt(linha, 0).toString();
            cliente.getCliente(Integer.parseInt(id));
            int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja excluir o cliente " + cliente.getCliente().getNome() + " ?");
            if (escolha == 0) {
                this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                JOptionPane.showMessageDialog(rootPane, cliente.excluirCliente());
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                preencherClientes();
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (jTable2.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o produto");
        } else {
            int linha = jTable2.getSelectedRow();
            String id = jTable2.getModel().getValueAt(linha, 0).toString();
            produto.getProduto(Integer.parseInt(id));
            int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja excluir o produto " + produto.getProduto().getNome() + " ?");
            if (escolha == 0) {
                this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                JOptionPane.showMessageDialog(rootPane, produto.excluirProduto());
                preencherProdutos();
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        jPanel5.removeAll();
        jPanel5.add(new JPanelGerenciarProduto(0, 0, this));
        jPanel5.validate();
        jButton7.setEnabled(false);
        jButton5.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (jTable2.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o Produto");
        } else {
            int linha = jTable2.getSelectedRow();
            String id = jTable2.getModel().getValueAt(linha, 0).toString();
            jPanel5.removeAll();
            jPanel5.add(new JPanelGerenciarProduto(Integer.parseInt(id), 1, this));
            jPanel5.validate();
            jButton6.setEnabled(false);
            jButton5.setEnabled(false);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jPanel4.removeAll();
        jPanel4.add(new JPanelGerenciarFormaPagamento(0, 0, this));
        jPanel4.validate();
        jButton9.setEnabled(false);
        jButton10.setEnabled(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        if (jTable4.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione a Forma de Pagamento");
        } else {
            int linha = jTable4.getSelectedRow();
            String id = jTable4.getModel().getValueAt(linha, 0).toString();
            jPanel4.removeAll();
            jPanel4.add(new JPanelGerenciarFormaPagamento(Integer.parseInt(id), 1, this));
            jPanel4.validate();
            jButton8.setEnabled(false);
            jButton10.setEnabled(false);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
     if (jTable3.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o fornecedor");
        } else {
            int linha = jTable3.getSelectedRow();
            String id = jTable3.getModel().getValueAt(linha, 0).toString();
            fornecedor.getFornecedor(Integer.parseInt(id));
            int escolha = JOptionPane.showConfirmDialog(rootPane, "Tem certeza que deseja excluir o fornecedor " + fornecedor.getFornecedor().getEmpresa() + " ?");
            if (escolha == 0) {
                this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                JOptionPane.showMessageDialog(rootPane, fornecedor.excluirFornecedor());
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                preencherFornecedores();
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        principal.gerenciarFornecedores(0, 0);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if (jTable3.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o fornecedor");
        } else {
            int linha = jTable3.getSelectedRow();
            String id = jTable3.getModel().getValueAt(linha, 0).toString();
            this.principal.gerenciarFornecedores(2, Integer.parseInt(id));
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (jTable3.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Selecione o fornecedor");
        } else {
            int linha = jTable3.getSelectedRow();
            String id = String.valueOf(jTable3.getModel().getValueAt(linha, 0));
            this.principal.gerenciarFornecedores(1, Integer.parseInt(id));
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private void preencherClientes() {
        cliente.buscarClientes();
        ArrayList<Cliente> clientes = cliente.getListaClisntes();
        DefaultTableModel dt;
        dt = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Nome", "Telefone", "Local de Trabalho"
                }) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        Object[] linha = new Object[4];
        for (int i = 0; i < clientes.size(); i++) {
            linha[0] = clientes.get(i).getId();
            linha[1] = clientes.get(i).getNome();
            linha[2] = clientes.get(i).getTelefoneValido();
            linha[3] = clientes.get(i).getLocalDeTrabalho();
            dt.addRow(linha);
        }

        jTable1 = new JTable(dt);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setBorder(null);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        repaint();
    }

    private void preencherFornecedores() {
        fornecedor.buscarFornecedores();
        ArrayList<Fornecedor> fornecedores = fornecedor.getListaFornecedores();
        DefaultTableModel dt;
        dt = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Id", "Empresa", "Telefone", "Vendedor"
                }) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        Object[] linha = new Object[4];
        for (int i = 0; i < fornecedores.size(); i++) {
            linha[0] = fornecedores.get(i).getIdFornecedor();
            linha[1] = fornecedores.get(i).getEmpresa();
            linha[2] = fornecedores.get(i).getTelefoneValido();
            linha[3] = fornecedores.get(i).getVendedor();
            dt.addRow(linha);
        }

        jTable3 = new JTable(dt);
        jTable3.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable3.getColumnModel().getColumn(0).setMinWidth(0);
        jTable3.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable3.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jScrollPane3.setViewportView(jTable3);
        jTable3.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setBorder(null);
        jTable3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        repaint();
    }

    public void preencherProdutos() {
        this.produto.buscarProdutos();
        ArrayList<Produto> listaProduto = this.produto.getListProdutos();
        DefaultTableModel tb;
        tb = new DefaultTableModel(new Object[][]{}, new String[]{"Codigo", "Nome", "Preco de custo", "Preco de venda", "Quantidade"}) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        Object[] linha = new Object[5];
        for (int i = 0; i < listaProduto.size(); i++) {
            linha[0] = listaProduto.get(i).getIdProduto();
            linha[1] = listaProduto.get(i).getNome();
            if (listaProduto.get(i).getPrecoCusto() == null || listaProduto.get(i).getPrecoCusto().equals("")) {
                linha[2] = "";
            } else {
                linha[2] = formatador.format(Double.parseDouble(listaProduto.get(i).getPrecoCusto().replace(",", ".")));
            }
            if (listaProduto.get(i).getPreco() == null || listaProduto.get(i).getPreco().equals("")) {
                linha[3] = "";
            } else {
                linha[3] = formatador.format(Double.parseDouble(listaProduto.get(i).getPreco().replace(",", ".")));
            }
            if (listaProduto.get(i).getQnt() < listaProduto.get(i).getQntMinima()) {
                linha[4] = "<html><font color=\"red\">" + listaProduto.get(i).getQnt() + "</font></html>";
            } else {
                linha[4] = listaProduto.get(i).getQnt();
            }
            tb.addRow(linha);
        }
        jTable2 = new JTable(tb);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setBorder(null);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        TableCellRenderer centerRenderer = new CenterRenderer();
        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
        TableColumn column1 = jTable2.getColumnModel().getColumn(2);
        TableColumn column2 = jTable2.getColumnModel().getColumn(3);
        TableColumn column3 = jTable2.getColumnModel().getColumn(4);
        column0.setCellRenderer(centerRenderer);
        column1.setCellRenderer(centerRenderer);
        column2.setCellRenderer(centerRenderer);
        column3.setCellRenderer(centerRenderer);

        repaint();
    }

    public void preencherProdutosProduzidos() {
        this.produto.buscarProdutosCategoria(0);
        ArrayList<Produto> listaProduto = this.produto.getListProdutos();
        DefaultTableModel tb;
        tb = new DefaultTableModel(new Object[][]{}, new String[]{"Codigo", "Nome", "Preco de venda", "Quantidade"}) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        Object[] linha = new Object[4];
        for (int i = 0; i < listaProduto.size(); i++) {
            linha[0] = listaProduto.get(i).getIdProduto();
            linha[1] = listaProduto.get(i).getNome();
            linha[2] = formatador.format(Double.parseDouble(listaProduto.get(i).getPreco().replace(",", ".")));
            linha[3] = listaProduto.get(i).getQnt();
            tb.addRow(linha);
        }
        jTable2 = new JTable(tb);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setBorder(null);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        TableCellRenderer centerRenderer = new CenterRenderer();
        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
        TableColumn column1 = jTable2.getColumnModel().getColumn(2);
        TableColumn column2 = jTable2.getColumnModel().getColumn(3);
        column0.setCellRenderer(centerRenderer);
        column1.setCellRenderer(centerRenderer);
        column2.setCellRenderer(centerRenderer);

        repaint();
    }

    public void preencherProdutosAtacado() {
        this.produto.buscarProdutosCategoria(1);
        ArrayList<Produto> listaProduto = this.produto.getListProdutos();
        DefaultTableModel tb;
        tb = new DefaultTableModel(new Object[][]{}, new String[]{"Codigo", "Nome", "Preco de custo", "Preco de venda", "Quantidade"}) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        Object[] linha = new Object[5];
        for (int i = 0; i < listaProduto.size(); i++) {
            linha[0] = listaProduto.get(i).getIdProduto();
            linha[1] = listaProduto.get(i).getNome();
            linha[2] = formatador.format(Double.parseDouble(listaProduto.get(i).getPrecoCusto().replace(",", ".")));
            linha[3] = formatador.format(Double.parseDouble(listaProduto.get(i).getPreco().replace(",", ".")));
            linha[4] = listaProduto.get(i).getQnt();
            tb.addRow(linha);
        }
        jTable2 = new JTable(tb);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setBorder(null);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        TableCellRenderer centerRenderer = new CenterRenderer();
        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
        TableColumn column1 = jTable2.getColumnModel().getColumn(2);
        TableColumn column2 = jTable2.getColumnModel().getColumn(3);
        TableColumn column3 = jTable2.getColumnModel().getColumn(4);
        column0.setCellRenderer(centerRenderer);
        column1.setCellRenderer(centerRenderer);
        column2.setCellRenderer(centerRenderer);
        column3.setCellRenderer(centerRenderer);

        repaint();
    }

    public void preencherProdutosMP() {
        this.produto.buscarProdutosCategoria(2);
        ArrayList<Produto> listaProduto = this.produto.getListProdutos();
        DefaultTableModel tb;
        tb = new DefaultTableModel(new Object[][]{}, new String[]{"Codigo", "Nome", "Preco de custo", "Quantidade"}) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        Object[] linha = new Object[4];
        for (int i = 0; i < listaProduto.size(); i++) {
            linha[0] = listaProduto.get(i).getIdProduto();
            linha[1] = listaProduto.get(i).getNome();
            linha[2] = formatador.format(Double.parseDouble(listaProduto.get(i).getPrecoCusto().replace(",", ".")));
            linha[3] = listaProduto.get(i).getQnt();
            tb.addRow(linha);
        }
        jTable2 = new JTable(tb);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setBorder(null);
        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        TableCellRenderer centerRenderer = new CenterRenderer();
        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
        TableColumn column1 = jTable2.getColumnModel().getColumn(2);
        TableColumn column2 = jTable2.getColumnModel().getColumn(3);
        column0.setCellRenderer(centerRenderer);
        column1.setCellRenderer(centerRenderer);
        column2.setCellRenderer(centerRenderer);

        repaint();
    }

    public void preencherFormaPagamento() {
        this.formaPagamento.buscarFormaPagamento();
        ArrayList<FormaPagamento> listaFormaPagamento = this.formaPagamento.getListFormaPagamento();
        DefaultTableModel tb;
        tb = new DefaultTableModel(new Object[][]{}, new String[]{"codigo", "descicao", "tipo"}) {

            @Override
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        Object[] linha = new Object[3];
        for (int i = 0; i < listaFormaPagamento.size(); i++) {
            linha[0] = listaFormaPagamento.get(i).getIdformaPAgamento();
            linha[1] = listaFormaPagamento.get(i).getDescricao();

            if (listaFormaPagamento.get(i).getTipoDePagamento() == 1) {
                linha[2] = "À Vista";
            } else {
                linha[2] = "À Prazo";
            }
            tb.addRow(linha);
        }
        jTable4 = new JTable(tb);
        jTable4.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable4.getColumnModel().getColumn(0).setMinWidth(0);
        jTable4.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
        jTable4.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
        jScrollPane4.setViewportView(jTable4);
        jTable4.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setBorder(null);
        jTable4.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        TableCellRenderer centerRenderer = new CenterRenderer();
        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
        TableColumn column3 = jTable2.getColumnModel().getColumn(2);
        column0.setCellRenderer(centerRenderer);
        column3.setCellRenderer(centerRenderer);

        repaint();
    }

    public void ativarBotoes(int tipo) {
        if (tipo == 0) {
            jButton7.setEnabled(true);
            jButton5.setEnabled(true);
        } else {
            jButton6.setEnabled(true);
            jButton5.setEnabled(true);
        }
    }

    public void ativarBotoesFP(int tipo) {
        if (tipo == 0) {
            jButton9.setEnabled(true);
            jButton10.setEnabled(true);
        } else {
            jButton8.setEnabled(true);
            jButton10.setEnabled(true);
        }
    }

    private void buscaDinamica() {
        jTextField1.addKeyListener(new KeyListener() {

            public void keyTyped(KeyEvent e) {
            }

            public void keyPressed(KeyEvent e) {
            }

            public void keyReleased(KeyEvent e) {

                if (!jTextField1.getText().equals("")) {
                    if (jComboBox1.getSelectedIndex() == 0) {
                        ArrayList<Cliente> clientes = cliente.buscaDinamicaClientes(jTextField1.getText());
                        DefaultTableModel dt;
                        dt = new DefaultTableModel(
                                new Object[][]{},
                                new String[]{
                                    "Id", "Nome", "Telefone", "Local de Trabalho"
                                }) {

                            @Override
                            public boolean isCellEditable(int row, int col) {
                                return false;
                            }
                        };
                        Object[] linha = new Object[4];
                        for (int i = 0; i < clientes.size(); i++) {
                            linha[0] = clientes.get(i).getId();
                            linha[1] = clientes.get(i).getNome();
                            linha[2] = clientes.get(i).getTelefoneValido();
                            linha[3] = clientes.get(i).getLocalDeTrabalho();
                            dt.addRow(linha);
                        }

                        jTable1 = new JTable(dt);
                        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
                        jTable1.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable1.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
                        jScrollPane1.setViewportView(jTable1);
                        jTable1.getTableHeader().setReorderingAllowed(false);
                        jScrollPane1.setBorder(null);
                        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                        repaint();
                    } else {
                        preencherClientes();
                    }
                }
            }
        });
        jTextField3.addKeyListener(new KeyListener() {

            public void keyTyped(KeyEvent e) {
            }

            public void keyPressed(KeyEvent e) {
            }

            public void keyReleased(KeyEvent e) {

                if (!jTextField3.getText().equals("")) {
                    fornecedor.buscarFornecedores();
                    ArrayList<Fornecedor> fornecedores = fornecedor.buscaDinamicaFornecedores(jTextField3.getText());
                    DefaultTableModel dt;
                    dt = new DefaultTableModel(
                            new Object[][]{},
                            new String[]{
                                "Id", "Empresa", "Telefone", "Vendedor"
                            }) {

                        @Override
                        public boolean isCellEditable(int row, int col) {
                            return false;
                        }
                    };
                    Object[] linha = new Object[4];
                    for (int i = 0; i < fornecedores.size(); i++) {
                        linha[0] = fornecedores.get(i).getIdFornecedor();
                        linha[1] = fornecedores.get(i).getEmpresa();
                        linha[2] = fornecedores.get(i).getTelefoneValido();
                        linha[3] = fornecedores.get(i).getVendedor();
                        dt.addRow(linha);
                    }

                    jTable3 = new JTable(dt);
                    jTable3.getColumnModel().getColumn(0).setMaxWidth(0);
                    jTable3.getColumnModel().getColumn(0).setMinWidth(0);
                    jTable3.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
                    jTable3.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
                    jScrollPane3.setViewportView(jTable3);
                    jTable3.getTableHeader().setReorderingAllowed(false);
                    jScrollPane3.setBorder(null);
                    jTable3.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                    repaint();
                } else {
                    preencherFornecedores();
                }
            }
        });
        jTextField2.addKeyListener(new KeyListener() {

            public void keyTyped(KeyEvent e) {
            }

            public void keyPressed(KeyEvent e) {
            }

            public void keyReleased(KeyEvent e) {

                if (jComboBox1.getSelectedIndex() == 0 || jComboBox1.getSelectedIndex() == 2) {
                    if (!jTextField2.getText().equals("")) {
                        ArrayList<Produto> listaProduto = produto.buscaDinamicaProdutos(jTextField2.getText());
                        DefaultTableModel tb;
                        tb = new DefaultTableModel(new Object[][]{}, new String[]{"Codigo", "Nome", "Preco de custo", "Preco de venda", "Quantidade"}) {

                            @Override
                            public boolean isCellEditable(int row, int col) {
                                return false;
                            }
                        };
                        Object[] linha = new Object[5];
                        for (int i = 0; i < listaProduto.size(); i++) {
                            linha[0] = listaProduto.get(i).getIdProduto();
                            linha[1] = listaProduto.get(i).getNome();
                            if (listaProduto.get(i).getPrecoCusto() != null && !listaProduto.get(i).getPrecoCusto().equals("")) {
                                linha[2] = formatador.format(Double.parseDouble(listaProduto.get(i).getPrecoCusto().replace(",", ".")));
                            } else {
                                linha[2] = "";
                            }
                            if (listaProduto.get(i).getPreco() != null) {
                                linha[3] = formatador.format(Double.parseDouble(listaProduto.get(i).getPreco().replace(",", ".")));
                            } else {
                                linha[3] = "";
                            }
                            linha[4] = listaProduto.get(i).getQnt();
                            tb.addRow(linha);
                        }
                        jTable2 = new JTable(tb);
                        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
                        jTable2.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable2.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
                        jScrollPane2.setViewportView(jTable2);
                        jTable2.getTableHeader().setReorderingAllowed(false);
                        jScrollPane2.setBorder(null);
                        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

                        TableCellRenderer centerRenderer = new CenterRenderer();
                        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
                        TableColumn column1 = jTable2.getColumnModel().getColumn(2);
                        TableColumn column2 = jTable2.getColumnModel().getColumn(3);
                        TableColumn column3 = jTable2.getColumnModel().getColumn(4);
                        column0.setCellRenderer(centerRenderer);
                        column1.setCellRenderer(centerRenderer);
                        column2.setCellRenderer(centerRenderer);
                        column3.setCellRenderer(centerRenderer);

                        repaint();
                    } else {
                        if (jComboBox1.getSelectedIndex() == 0) {
                            preencherProdutos();
                        } else {
                            preencherProdutosAtacado();
                        }
                    }
                } else if (jComboBox1.getSelectedIndex() == 1) {
                    if (!jTextField2.getText().equals("")) {
                        ArrayList<Produto> listaProduto = produto.buscaDinamicaProdutos(jTextField2.getText());
                        DefaultTableModel tb;
                        tb = new DefaultTableModel(new Object[][]{}, new String[]{"Codigo", "Nome", "Preco de venda", "Quantidade"}) {

                            @Override
                            public boolean isCellEditable(int row, int col) {
                                return false;
                            }
                        };
                        Object[] linha = new Object[4];
                        for (int i = 0; i < listaProduto.size(); i++) {
                            linha[0] = listaProduto.get(i).getIdProduto();
                            linha[1] = listaProduto.get(i).getNome();
                            linha[2] = formatador.format(Double.parseDouble(listaProduto.get(i).getPreco().replace(",", ".")));
                            linha[3] = listaProduto.get(i).getQnt();
                            tb.addRow(linha);
                        }
                        jTable2 = new JTable(tb);
                        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
                        jTable2.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable2.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
                        jScrollPane2.setViewportView(jTable2);
                        jTable2.getTableHeader().setReorderingAllowed(false);
                        jScrollPane2.setBorder(null);
                        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

                        TableCellRenderer centerRenderer = new CenterRenderer();
                        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
                        TableColumn column1 = jTable2.getColumnModel().getColumn(2);
                        TableColumn column2 = jTable2.getColumnModel().getColumn(3);
                        column0.setCellRenderer(centerRenderer);
                        column1.setCellRenderer(centerRenderer);
                        column2.setCellRenderer(centerRenderer);

                        repaint();
                    } else {
                        preencherProdutosProduzidos();
                    }
                } else {
                    if (!jTextField2.getText().equals("")) {
                        ArrayList<Produto> listaProduto = produto.buscaDinamicaProdutos(jTextField2.getText());
                        DefaultTableModel tb;
                        tb = new DefaultTableModel(new Object[][]{}, new String[]{"Codigo", "Nome", "Preco de custo", "Quantidade"}) {

                            @Override
                            public boolean isCellEditable(int row, int col) {
                                return false;
                            }
                        };
                        Object[] linha = new Object[4];
                        for (int i = 0; i < listaProduto.size(); i++) {
                            linha[0] = listaProduto.get(i).getIdProduto();
                            linha[1] = listaProduto.get(i).getNome();
                            linha[2] = formatador.format(Double.parseDouble(listaProduto.get(i).getPrecoCusto().replace(",", ".")));
                            linha[3] = listaProduto.get(i).getQnt();
                            tb.addRow(linha);
                        }
                        jTable2 = new JTable(tb);
                        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
                        jTable2.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(0);
                        jTable2.getTableHeader().getColumnModel().getColumn(0).setMinWidth(0);
                        jScrollPane2.setViewportView(jTable2);
                        jTable2.getTableHeader().setReorderingAllowed(false);
                        jScrollPane2.setBorder(null);
                        jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

                        TableCellRenderer centerRenderer = new CenterRenderer();
                        TableColumn column0 = jTable2.getColumnModel().getColumn(0);
                        TableColumn column1 = jTable2.getColumnModel().getColumn(2);
                        TableColumn column2 = jTable2.getColumnModel().getColumn(3);
                        column0.setCellRenderer(centerRenderer);
                        column1.setCellRenderer(centerRenderer);
                        column2.setCellRenderer(centerRenderer);

                        repaint();
                    } else {
                        preencherProdutosMP();
                    }
                }
            }
        });
    }

    private void preencherTipos() {
        CategoriasController c = new CategoriasController();
        c.buscaCategorias();
        jComboBox1.addItem("Todos");
        for (int i = 0; i < c.getListaCategorias().size(); i++) {
            jComboBox1.addItem(c.getListaCategorias().get(i).getDescricao());
        }
        jComboBox1.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if (jComboBox1.getSelectedIndex() == 0) {
                    jTextField2.setText("");
                    preencherProdutos();
                } else if (jComboBox1.getSelectedIndex() == 1) {
                    jTextField2.setText("");
                    preencherProdutosProduzidos();
                } else if (jComboBox1.getSelectedIndex() == 2) {
                    jTextField2.setText("");
                    preencherProdutosAtacado();
                } else {
                    jTextField2.setText("");
                    preencherProdutosMP();
                }
            }
        });
    }

    class CenterRenderer extends DefaultTableCellRenderer {

        public CenterRenderer() {
            setHorizontalAlignment(CENTER);
        }
    }
}
